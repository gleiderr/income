{"version":3,"sources":["firebase-local.js","height.js","Header.js","SignInScreen.js","Doc.js","Chat.js","index.js"],"names":["firebase_init","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setVH","resize","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","f","inThrottle","setTimeout","throttle","ChatHeader","user","sign_in","open_sign_in","hideChat","docLink","id","onClick","margin","marginLeft","background","color","borderColor","icon","button","outlined","auth","signOut","trailingIcon","position","app","err","uiConfig","signInFlow","credentialHelper","global","firebaseui","CredentialHelper","NONE","signInOptions","GoogleAuthProvider","PROVIDER_ID","provider","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","SignInChat","useEffect","AuthUI","getInstance","start","alignSelf","Doc","props","inventionListener","inventionSave","showHeader","useState","view","setView","markdown","setMarkdown","waiting","wait","header","display","padding","htmlFor","marginRight","checked","nativeControlId","data-testid","onChange","e","target","className","raised","then","flexGrow","overflow","View","Markdown","input","useRef","contentEditable","suppressContentEditableWarning","ref","onBlur","evt","innerText","whiteSpace","WebkitUserModify","overflowWrap","lineBreak","lineHeight","fontFamily","converter","showdown","Converter","strikethrough","setFlavor","html","makeHtml","dangerouslySetInnerHTML","__html","Chat","sendMsg","msgsListener","autor","texto","escrever","autoScroll","setAutoScroll","changeInput","value","Promise","resolve","current","inputElement","height","scrollHeight","msgList","setMsgs","MessageList","key","label","textarea","flex","rows","maxHeight","currentTarget","mini","textoEnviado","catch","fim","lista","divMsgs","map","msg","Mensagem","scrollDown","scrollIntoView","behavior","news","setNews","onScroll","bottomList","getBoundingClientRect","bottom","bottomFim","previousSibling","Math","abs","undefined","textLabel","exited","fontWeight","db","firestore","invencoes","collection","timestamp","FieldValue","serverTimestamp","a","reject","trim","length","doc","add","ReactDOM","render","setUser","contexto","unsubProfileGetter","onAuthStateChanged","get","snapshot","metadata","fromCache","data","set","console","timeEnd","newUser","uid","nome","displayName","papel","time","onSnapshot","includeMetadataChanges","log","displayDocs","innerWidth","displayChat","setChatDisplay","tag","gridGap","phoneColumns","tabletColumns","desktopColumns","flexDirection","right","zIndex","width","alertas","orderBy","docs","forEach","push","error","invenção","querySelector"],"mappings":"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","file":"static/js/main.75916df0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport default function firebase_init() {\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyCI77PrVU6FyFQN9OQhF8uo2ypHZQTQqSM\",\r\n    authDomain: \"gleider-dev.firebaseapp.com\",\r\n    databaseURL: \"https://gleider-dev.firebaseio.com\",\r\n    projectId: \"gleider-dev\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"868861057308\",\r\n    appId: \"1:868861057308:web:72ab5d4b1e875ce7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n}","export const setVH = () => {\r\n  const debouce = f => {\r\n    let currentDebouce;\r\n    return () => {\r\n      clearTimeout(currentDebouce);\r\n      currentDebouce = setTimeout(() => f(), 15);\r\n    }\r\n  }\r\n\r\n  const throttle = f => {\r\n    let inThrottle = false;\r\n    return () => {\r\n      if (!inThrottle) {\r\n        inThrottle = setTimeout(() => {\r\n          f();\r\n          inThrottle = false\r\n        }, 15)\r\n      }\r\n    }\r\n  }\r\n\r\n  /*const scroll = () => {\r\n    let element;\r\n    const {hash = '#incomedocs'} = window.location;\r\n    // alert(`.${hash}.`);\r\n    // console.log(hash);\r\n    switch(hash) {\r\n      case '#incomedocs':\r\n      case '#incomechat':\r\n        element = document.querySelector(hash);\r\n        element && element.scrollIntoView();\r\n        break;\r\n      default:\r\n        element = document.querySelector('#incomedocs');\r\n        element && element.scrollIntoView();\r\n    }\r\n  };*/\r\n\r\n  const resize = () => {\r\n    //Recupera e atribui unidade de altura da tela corrente\r\n    const vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\n    //Rola para sessão corrente\r\n    //scroll();\r\n  };\r\n\r\n  resize();\r\n  window.addEventListener('resize', throttle(resize));\r\n  //window.addEventListener('scroll', throttle(scroll));\r\n}\r\n\r\n/*function throttle(func, wait, options) {\r\n  var context, args, result;\r\n  var timeout = null;\r\n  var previous = 0;\r\n  if (!options) options = {};\r\n  var later = function() {\r\n    previous = options.leading === false ? 0 : Date.now();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n  return function() {\r\n    var now = Date.now();\r\n    if (!previous && options.leading === false) previous = now;\r\n    var remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n};*/\r\n\r\n","import React, { useMemo } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport { Button } from '@material/react-button';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport TopAppBar, {\r\n  TopAppBarRow,\r\n  /*TopAppBarFixedAdjust, \r\n  TopAppBarIcon,\r\n  TopAppBarSection,\r\n  TopAppBarTitle,*/\r\n} from '@material/react-top-app-bar';\r\nimport { SignInChat } from './SignInScreen';\r\n\r\nexport function ChatHeader({user, sign_in, open_sign_in, hideChat}) {\r\n\r\n  const docLink = <Button id='fab-docs'\r\n                    onClick={() => hideChat()}\r\n                    style={{\r\n                      margin: 'auto 8px auto auto',\r\n                      marginLeft: 'auto',\r\n                      background: 'var(--mdc-theme-secondary)',\r\n                      color: 'var(--mdc-theme-on-secondary)',\r\n                      borderColor: 'var(--mdc-theme-on-primary, #ffffff)',\r\n                    }}\r\n                    icon={<MaterialIcon icon=\"description\"/>}>\r\n    Documentação\r\n  </Button>\r\n\r\n  const style = {\r\n    color: 'var(--mdc-theme-on-primary, #ffffff)',\r\n    borderColor: 'var(--mdc-theme-on-primary, #ffffff)',\r\n    margin: 'auto 8px'\r\n  };\r\n  const button = !!user ? <Button outlined style={style} \r\n                                  onClick={() => firebase.auth().signOut()}>Desconectar</Button> :\r\n                          <Button outlined style={style} \r\n                                  onClick={() => open_sign_in(!sign_in)}\r\n                                  trailingIcon={<MaterialIcon icon={sign_in ? \"arrow_drop_up\" : \"arrow_drop_down\"}/>}>\r\n                            {sign_in ? 'Cancelar' : 'Conectar'}\r\n                          </Button>\r\n\r\n  //const sigInChat = useMemo(() => <SignInChat user={user} />, [user]) ;\r\n\r\n  return (\r\n    <TopAppBar style={{position: 'static'}}>\r\n      <TopAppBarRow>\r\n        {button}\r\n        {docLink}\r\n      </TopAppBarRow>\r\n      {sign_in && !user ? <SignInChat user={user} /> : null}\r\n    </TopAppBar>\r\n  );\r\n}","import React, {useEffect} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport firebase_init from \"./firebase-local\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n//import firebaseui from 'firebaseui';\r\n//const firebaseui = require('firebaseui');\r\n\r\ntry {\r\n  firebase.app();\r\n} catch(err) {\r\n  firebase_init();\r\n}\r\n\r\n//https://github.com/firebase/firebaseui-web/\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"popup\",\r\n  credentialHelper: global.firebaseui.auth.CredentialHelper.NONE,\r\n\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    //firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: true,\r\n    },\r\n    //firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    //firebase.auth.AnonymousAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    // Avoid redirects after sign-in.\r\n    signInSuccessWithAuthResult: () => false\r\n  }\r\n};\r\n\r\nexport function SignIn() {\r\n  return (\r\n    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n  );\r\n}\r\n\r\nexport function SignInChat({ user }) {\r\n  useEffect(() => {\r\n    const {AuthUI} = global.firebaseui.auth;\r\n    const ui = AuthUI.getInstance() || new AuthUI(firebase.auth());\r\n    ui.start('#firebaseui-auth-container', uiConfig);\r\n  });\r\n  \r\n  return (\r\n    <div style={{background: 'var(--mdc-theme-primary)', alignSelf: 'center'}}>\r\n      Conecte-se para enviar mensagens\r\n      {/* <StyledFirebaseAuth\r\n        uiConfig={uiConfig}\r\n        firebaseAuth={firebase.auth()}\r\n      /> */}\r\n      <div id='firebaseui-auth-container'></div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport showdown from 'showdown';\r\nimport Switch from '@material/react-switch';\r\nimport Button from '@material/react-button';\r\n\r\nexport default function Doc(props) {\r\n  const {inventionListener, inventionSave, showHeader} = props;\r\n  const [view, setView] = useState(true)\r\n  const [markdown, setMarkdown] = useState(``);\r\n  const [waiting, wait] = useState(''); \r\n\r\n  useEffect(() => inventionListener(setMarkdown), [inventionListener,setMarkdown])\r\n\r\n  const header = !showHeader ? null : (\r\n    <div style={{display: 'flex', padding: '8px', }}>\r\n      <label htmlFor='my-switch' style={{marginRight: '12px'}}>Visualizar</label>\r\n      <Switch  checked={view} nativeControlId='my-switch' data-testid='switch'\r\n              onChange={(e) => setView(e.target.checked)} />\r\n      <Button data-testid='save-button'\r\n        className={waiting}\r\n        raised style={{marginLeft: 'auto'}} \r\n        onClick={() => {\r\n          wait('waiting'); \r\n          inventionSave(markdown).then(() => wait(''));\r\n        }} >\r\n        Salvar\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {header}\r\n      <div style={{flexGrow: 1, overflow: 'auto', padding: '8px',}}>\r\n        {view ? <View {...{markdown}} /> : <Markdown {...{markdown, setMarkdown}} />}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Markdown(props) {\r\n  const {markdown, setMarkdown} = props;\r\n  const input = useRef(null);\r\n  return (\r\n    <div contentEditable suppressContentEditableWarning\r\n      ref={input}\r\n      data-testid='markdown'\r\n      onBlur={(evt) => setMarkdown(evt.target.innerText)}\r\n      style={{\r\n        whiteSpace:'pre-wrap', \r\n        WebkitUserModify: 'read-write', \r\n        overflowWrap: 'break-word', \r\n        lineBreak: 'after-white-space',\r\n        lineHeight: '1em',\r\n        fontFamily: 'monospace',\r\n        display: 'inline-block',\r\n      }}>\r\n      {markdown}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction View(props) {\r\n  const {markdown} = props;\r\n  const converter = new showdown.Converter({strikethrough: true});\r\n  converter.setFlavor('github');\r\n  const html = converter.makeHtml(markdown);\r\n  //console.log('render view', html); \r\n  return <div className='income-doc' data-testid='view'\r\n              dangerouslySetInnerHTML={{__html: html}} />;\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from '@material/react-button';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Fab } from '@material/react-fab';\r\nimport Card, {\r\n  CardPrimaryContent,\r\n  /*CardMedia,\r\n  CardActions,\r\n  CardActionButtons,\r\n  CardActionIcons, */\r\n} from \"@material/react-card\";\r\nimport TextField, {/*HelperText, */Input} from '@material/react-text-field';\r\n\r\n/**\r\n * @example Modelo de Dados Mensagens\r\n * //Ponteiro para identificar usuários\r\n * //Arranjos para manter flexibilidade, mas sem utilidade atual\r\n *  'auto_id': {\r\n *    texto: \"minha mensagem\",\r\n *    timestamp: timestamp,\r\n *    autor: 'GleiderID',\r\n *  }\r\n * \r\n * @example Modelo de Dados de Usuários \r\n * 'uid': {\r\n *    papel: 'administrador'\r\n * }\r\n */\r\n \r\n export default function Chat({sendMsg, msgsListener, autor} = {}) {\r\n  const [texto, escrever] = useState('');\r\n  const [autoScroll, setAutoScroll] = useState(true); \r\n\r\n  const input = useRef(null);\r\n  const autoResize = () => {\r\n    //Posterga alterações na altura para próximos eventloops\r\n    Promise.resolve()\r\n      .then(() => {\r\n        const {inputElement} = input.current;\r\n        inputElement.style.height = 'auto'; //necessário para diminuição da caixa de texto\r\n      }).then(() => {\r\n        const {inputElement} = input.current;\r\n        inputElement.style.height = inputElement.scrollHeight + 'px';\r\n      });\r\n  };\r\n  const changeInput = value => {\r\n    escrever(value);\r\n    autoResize();\r\n  };\r\n\r\n  const send = () => {\r\n    setAutoScroll(true);\r\n\r\n    const textoEnviado = texto; //memorização do texto enviado\r\n    changeInput(''); //limpeza do campo\r\n    sendMsg(texto, autor)\r\n      .catch(() => changeInput(textoEnviado)); //restaura texto enviado se erro\r\n  }\r\n  \r\n  //Atualiza lista de mensagens\r\n  const [msgList, setMsgs] = useState([]);\r\n  useEffect(() => {\r\n    return msgsListener(setMsgs);\r\n  }, [msgsListener, setMsgs]);\r\n\r\n  const lineHeight = 20;\r\n  const padding = 0; \r\n  \r\n  return (\r\n    <>\r\n      <MessageList key={''} {...{msgList, autoScroll, setAutoScroll}} />\r\n      <div style={{display: 'flex'}}>\r\n        <TextField id='MessageInput' className='MessageInput' label='Sua mensagem' outlined textarea style={{ flex: 1, height: 'auto', margin: '8px'}} >\r\n          <Input rows='1' value={texto} ref={input}\r\n                 data-testid=\"input\" \r\n                style={{\r\n                  margin: '8px',\r\n                  padding: `${padding}px`,\r\n                  lineHeight: `${lineHeight}px`,\r\n                  height: `${padding + lineHeight}px`, \r\n                  maxHeight: `${padding + 4 * lineHeight}px`,\r\n                  resize: 'none',\r\n                }}\r\n                onChange={(e) => changeInput(e.currentTarget.value)} />\r\n        </TextField>\r\n        <Fab mini icon={<MaterialIcon icon=\"send\"/> }\r\n             data-testid=\"send\"\r\n             onClick={send}\r\n             style={{\r\n               margin: 'auto',\r\n               marginRight: '8px',\r\n               color: 'var(--mdc-theme-on-primary, #fff)',\r\n               background: 'var(--mdc-theme-primary, #6200ee)'\r\n             }} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MessageList({msgList, autoScroll, setAutoScroll}) {\r\n  const fim = useRef(null);\r\n  const lista = useRef(null);\r\n\r\n  const divMsgs = msgList.map((msg) => {\r\n    return <Mensagem key={msg.id} msg={msg} />\r\n  });\r\n\r\n  const scrollDown = () => {\r\n    fim.current && \r\n        fim.current.scrollIntoView && \r\n        fim.current.scrollIntoView({behavior: \"smooth\"});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (autoScroll) scrollDown();\r\n  });\r\n\r\n  const [news, setNews] = useState(false);\r\n  useEffect(() => {\r\n    if (!autoScroll) setNews(true);\r\n  }, [msgList]);\r\n\r\n  return (\r\n    <div className={'teste'} data-testid=\"msg-list\" ref={lista} \r\n         style={{\r\n           flexGrow: 1, overflow: 'auto', position: 'relative'\r\n         }}\r\n         onScroll={({target}) => {\r\n           const {bottom: bottomList} = target.getBoundingClientRect();\r\n           const { bottom: bottomFim } = fim.current.previousSibling.getBoundingClientRect();\r\n           setAutoScroll(Math.abs(bottomFim - bottomList) < 20);\r\n         }}\r\n         >\r\n      {divMsgs}\r\n      <div ref={fim}></div>\r\n      <Fab id=\"scroll-down\" className={news ? 'new-msgs' : undefined}  mini \r\n          textLabel={news ? 'novas mensagens' : undefined}\r\n          exited={autoScroll}\r\n           icon={<MaterialIcon icon=\"expand_more\"/> }\r\n           onClick={() => {\r\n             scrollDown();\r\n             setNews(false);\r\n           }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Mensagem({msg}) {\r\n  return (\r\n    <Card outlined={false} style={{margin: '8px'}} data-testid=\"mensagem\">\r\n      <CardPrimaryContent style={{padding: '0px 4px'}}>\r\n        <div data-testid=\"autor\" style={{fontWeight: 'bold'}} >{msg.autor}</div>\r\n        <div className=\"msg-text\" data-testid=\"texto\">{msg.texto}</div>\r\n      </CardPrimaryContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from \"firebase\";\r\nimport firebase_init from \"./firebase-local\";\r\nimport {setVH} from './height';\r\nimport {ChatHeader} from './Header';\r\n\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport '@material/react-card/dist/card.css';\r\nimport '@material/react-list/dist/list.css';\r\nimport '@material/react-typography/dist/typography.css';\r\nimport \"@material/react-switch/dist/switch.css\";\r\nimport '@material/react-button/dist/button.css';\r\nimport '@material/react-text-field/dist/text-field.css';\r\nimport '@material/react-fab/dist/fab.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport '@material/react-top-app-bar/dist/top-app-bar.css';\r\nimport '@material/react-drawer/dist/drawer.css';\r\n\r\nimport './index.css';\r\nimport './shadow.css';\r\nimport './color.css';\r\nimport './height.css';\r\nimport './docs.css';\r\nimport './styles/Chat.css';\r\n\r\nimport {Cell, Grid, Row} from '@material/react-layout-grid';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Fab } from '@material/react-fab';\r\nimport {Body1} from '@material/react-typography';\r\n\r\n//import { SignInChat } from './SignInScreen';\r\nimport Doc from './Doc';\r\nimport Chat from './Chat';\r\n//import App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\ntry {\r\n  firebase.app();\r\n} catch(err) {\r\n  firebase_init();\r\n}\r\n\r\nglobal.firebase = firebase;\r\n\r\nconst db = firebase.firestore();\r\nconst invencoes = db.collection('invencoes');\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\nsetVH();\r\n\r\nfunction Income(props) {\r\n  //Props\r\n  const {sendMsg, msgsListener} = props;\r\n  const {inventionListener, inventionSave} = props;\r\n\r\n  //Estados\r\n  const [user, setUser] = useState(undefined);\r\n  const [contexto, setContexto] = useState('income');\r\n  const [sign_in, open_sign_in] = useState(false);\r\n  //const [connecting, initLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let unsubProfileGetter = undefined;\r\n    return firebase.auth().onAuthStateChanged(user => {\r\n      if (!user) {\r\n        setUser(undefined);\r\n        if(unsubProfileGetter) {\r\n          unsubProfileGetter();\r\n          unsubProfileGetter = undefined;\r\n        }\r\n        console.log('desconectado');\r\n        console.timeEnd('logging');\r\n      } else { //ao fazer login\r\n        console.time('logging');\r\n        \r\n        //Atribui usuário sem definição do papel\r\n        setUser({\r\n          uid: user.uid,\r\n          nome: user.displayName,\r\n        });\r\n        \r\n        const doc = db.collection('usuarios').doc(user.uid);\r\n        unsubProfileGetter = doc.onSnapshot({ includeMetadataChanges: true }, get);\r\n\r\n        async function get(snapshot) {\r\n          if (!snapshot.metadata.fromCache) {\r\n           //Atribui usuário com definições gravadas no banco, se usuário permanecer conectado\r\n            setUser(snapshot.data() ||  await set());\r\n            unsubProfileGetter(); //desescreve snapshot listener quando acabar\r\n            unsubProfileGetter = undefined;\r\n            console.timeEnd('logging');\r\n          }\r\n        }\r\n\r\n        async function set() {\r\n          const newUser = {\r\n            uid: user.uid,\r\n            nome: user.displayName,\r\n            papel: 'comum',\r\n          };\r\n          await doc.set(newUser);\r\n          return newUser;\r\n        }\r\n      }      \r\n    });\r\n  }, []);\r\n\r\n  const callbacks = { \r\n    sendMsg: (...params) => {\r\n      if (user) return sendMsg(...params);\r\n      \r\n      open_sign_in(true);\r\n      return Promise.reject('Usuário não conectado');\r\n    }, \r\n    msgsListener, \r\n  };\r\n\r\n  const [displayDocs, setDocsDisplay] = useState('flex');\r\n  const [displayChat, setChatDisplay] = useState( window.innerWidth <= 840 ? 'none' : 'flex');\r\n  return (\r\n    <Body1 tag={'div'}>\r\n      <Grid style={{padding: 0}}>\r\n        <Row style={{gridGap: '0px'}}>\r\n          <Cell id='incomedocs' className='vh100' phoneColumns={12} tabletColumns={12} desktopColumns={8} \r\n                style={{display: displayDocs, flexDirection: 'column', position: 'relative'}}>\r\n            <Doc showHeader={!!user && user.papel === 'administrador'}\r\n                  inventionSave={(markdown) => inventionSave(markdown, contexto, user)}\r\n                  inventionListener={(setMarkdown) => inventionListener(contexto, setMarkdown)} />\r\n            \r\n            <Fab id='fab-chat' icon={<MaterialIcon icon=\"chat\"/>}\r\n                  onClick={() => setChatDisplay('flex')}\r\n                  textLabel='Chat'\r\n                   style={{\r\n                     margin: '16px', position: 'absolute', bottom: '0px', right: '0px',\r\n                     zIndex: 0,\r\n                     color: 'var(--mdc-theme-on-primary, #fff)',\r\n                     background: 'var(--mdc-theme-primary, #6200ee)'\r\n                   }} />\r\n          </Cell>\r\n          <Cell id='incomechat' className='vh100' phoneColumns={12} tabletColumns={12} desktopColumns={4} \r\n                style={{display: displayChat, flexDirection: 'column', background: 'white', width: '100%'}}>\r\n            <ChatHeader user={user} sign_in={sign_in} open_sign_in={open_sign_in} hideChat={() => setChatDisplay('none')}/>\r\n            <Chat autor={user} alertas={[]} {...callbacks} />\r\n          </Cell>\r\n        </Row>\r\n      </Grid>\r\n    </Body1>);\r\n}\r\n\r\nasync function sendMsg(texto, autor) {\r\n  if (!autor) {\r\n     return Promise.reject('Conecte-se para enviar mensagens');\r\n  }\r\n\r\n  //await demorar(5000);\r\n\r\n  texto = texto.trim();\r\n\r\n  if (texto.length > 0) {\r\n    return invencoes.doc('income')\r\n          .collection('msgs')\r\n          .add({texto, timestamp, autor});\r\n  } else {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /*function demorar(t) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => reject(), t)\r\n    })\r\n  }*/\r\n}\r\n\r\nfunction msgsListener(setMsgs) {\r\n  //db.collection('conversas').doc(contexto).delete().then(() => console.log('excluído'));\r\n  const msgsRef = invencoes.doc('income').collection('msgs');\r\n  const msgsQuery = msgsRef.orderBy('timestamp');\r\n\r\n  return msgsQuery.onSnapshot( docs => {\r\n    //console.log('msgsListener');\r\n    const data = [];\r\n    docs.forEach(doc => {\r\n      data.push({\r\n        ...doc.data(), \r\n        id: doc.id,\r\n        autor: doc.data().autor.nome,\r\n      });\r\n    });\r\n    setMsgs(data);\r\n  },\r\n  error => console.log(error));\r\n}\r\n\r\nfunction inventionListener(invenção, setMarkdown) {\r\n  return invencoes.doc(invenção).onSnapshot( doc => {\r\n    if(doc.data()) setMarkdown(doc.data().markdown);\r\n  }, error => console.log(error));\r\n}\r\n\r\nfunction inventionSave(markdown, invenção, autor) {\r\n  invencoes.doc(invenção).collection('historico').add({\r\n    markdown, timestamp\r\n  });\r\n  \r\n  return invencoes.doc(invenção).set({markdown})\r\n    .catch(error => Promise.reject(<div>error</div>));\r\n}\r\n\r\nReactDOM.render(<Income sendMsg={sendMsg} msgsListener={msgsListener}\r\n                        inventionListener={inventionListener}\r\n                        inventionSave={inventionSave}\r\n               />, document.querySelector(\"#root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}