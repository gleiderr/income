{"version":3,"sources":["firebase-local.js","height.js","SignInScreen.js","Header.js","Doc.js","Chat.js","index.js"],"names":["firebase_init","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseui","require","app","err","uiConfig","signInFlow","credentialHelper","auth","CredentialHelper","NONE","signInOptions","GoogleAuthProvider","PROVIDER_ID","provider","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","SignInChat","user","style","background","alignSelf","firebaseAuth","ChatHeader","sign_in","open_sign_in","hideChat","docLink","id","onClick","margin","marginLeft","color","borderColor","icon","button","outlined","signOut","trailingIcon","sigInChat","useMemo","position","Doc","props","inventionListener","inventionSave","showHeader","useState","view","setView","markdown","setMarkdown","useEffect","header","display","padding","htmlFor","marginRight","checked","nativeControlId","data-testid","onChange","e","target","raised","flexGrow","overflow","View","Markdown","contentEditable","suppressContentEditableWarning","onBlur","evt","innerText","whiteSpace","WebkitUserModify","overflowWrap","lineBreak","lineHeight","fontFamily","converter","showdown","Converter","strikethrough","setFlavor","html","makeHtml","className","dangerouslySetInnerHTML","__html","Chat","sendMsg","msgsListener","autor","texto","escrever","send","then","catch","console","error","msgList","setMsgs","MessageList","label","flex","height","onKeyDown","key","persist","value","currentTarget","mini","fim","useRef","lista","a","as","divMsgs","map","msg","Mensagem","current","previousSibling","bottomList","getBoundingClientRect","bottom","topFim","top","log","scrollIntoView","behavior","ref","fontWeight","db","firestore","invencoes","collection","timestamp","FieldValue","serverTimestamp","Promise","reject","trim","length","doc","add","resolve","resize","vh","window","innerHeight","document","documentElement","setProperty","addEventListener","f","inThrottle","setTimeout","throttle","setVH","ReactDOM","render","undefined","setUser","contexto","unsubProfileGetter","onAuthStateChanged","get","snapshot","metadata","fromCache","data","set","timeEnd","newUser","uid","nome","displayName","papel","time","onSnapshot","includeMetadataChanges","displayDocs","innerWidth","displayChat","setChatDisplay","tag","gridGap","phoneColumns","tabletColumns","desktopColumns","flexDirection","right","zIndex","width","alertas","orderBy","docs","forEach","push","invenção","querySelector"],"mappings":"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","file":"static/js/main.87533756.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport default function firebase_init() {\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyCI77PrVU6FyFQN9OQhF8uo2ypHZQTQqSM\",\r\n    authDomain: \"gleider-dev.firebaseapp.com\",\r\n    databaseURL: \"https://gleider-dev.firebaseio.com\",\r\n    projectId: \"gleider-dev\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"868861057308\",\r\n    appId: \"1:868861057308:web:72ab5d4b1e875ce7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n}","export const setVH = () => {\r\n  const debouce = f => {\r\n    let currentDebouce;\r\n    return () => {\r\n      clearTimeout(currentDebouce);\r\n      currentDebouce = setTimeout(() => f(), 15);\r\n    }\r\n  }\r\n\r\n  const throttle = f => {\r\n    let inThrottle = false;\r\n    return () => {\r\n      if (!inThrottle) {\r\n        inThrottle = setTimeout(() => {\r\n          f();\r\n          inThrottle = false\r\n        }, 15)\r\n      }\r\n    }\r\n  }\r\n\r\n  /*const scroll = () => {\r\n    let element;\r\n    const {hash = '#incomedocs'} = window.location;\r\n    // alert(`.${hash}.`);\r\n    // console.log(hash);\r\n    switch(hash) {\r\n      case '#incomedocs':\r\n      case '#incomechat':\r\n        element = document.querySelector(hash);\r\n        element && element.scrollIntoView();\r\n        break;\r\n      default:\r\n        element = document.querySelector('#incomedocs');\r\n        element && element.scrollIntoView();\r\n    }\r\n  };*/\r\n\r\n  const resize = () => {\r\n    //Recupera e atribui unidade de altura da tela corrente\r\n    const vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\n    //Rola para sessão corrente\r\n    //scroll();\r\n  };\r\n\r\n  resize();\r\n  window.addEventListener('resize', throttle(resize));\r\n  //window.addEventListener('scroll', throttle(scroll));\r\n}\r\n\r\n/*function throttle(func, wait, options) {\r\n  var context, args, result;\r\n  var timeout = null;\r\n  var previous = 0;\r\n  if (!options) options = {};\r\n  var later = function() {\r\n    previous = options.leading === false ? 0 : Date.now();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n  return function() {\r\n    var now = Date.now();\r\n    if (!previous && options.leading === false) previous = now;\r\n    var remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n};*/\r\n\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport firebase_init from \"./firebase-local\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n//import firebaseui from 'firebaseui';\r\nconst firebaseui = require('firebaseui');\r\n\r\ntry {\r\n  firebase.app();\r\n} catch(err) {\r\n  firebase_init();\r\n}\r\n\r\n//https://github.com/firebase/firebaseui-web/\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"popup\",\r\n  credentialHelper: firebaseui.auth.CredentialHelper.NONE,\r\n\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    //firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: true,\r\n    },\r\n    //firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    //firebase.auth.AnonymousAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    // Avoid redirects after sign-in.\r\n    signInSuccessWithAuthResult: () => false\r\n  }\r\n};\r\n\r\nexport function SignIn() {\r\n  return (\r\n    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n  );\r\n}\r\n\r\nexport function SignInChat({ user }) {\r\n  // Se usuário conectado, elemento é processado para que conexão seja \r\n  // verificada, mas não é renderizado\r\n  if (!!user) return null; \r\n  \r\n  return (\r\n    <div style={{background: 'var(--mdc-theme-primary)', alignSelf: 'center'}}>\r\n      Conecte-se para enviar mensagens\r\n      <StyledFirebaseAuth\r\n        uiConfig={uiConfig}\r\n        firebaseAuth={firebase.auth()}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useMemo } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport { Button } from '@material/react-button';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport TopAppBar, {\r\n  TopAppBarRow,\r\n  /*TopAppBarFixedAdjust, \r\n  TopAppBarIcon,\r\n  TopAppBarSection,\r\n  TopAppBarTitle,*/\r\n} from '@material/react-top-app-bar';\r\nimport { SignInChat } from './SignInScreen';\r\n\r\nexport function ChatHeader({user, sign_in, open_sign_in, hideChat}) {\r\n\r\n  const docLink = <Button id='fab-docs'\r\n                    onClick={() => hideChat()}\r\n                    style={{\r\n                      margin: 'auto 8px auto auto',\r\n                      marginLeft: 'auto',\r\n                      background: 'var(--mdc-theme-secondary)',\r\n                      color: 'var(--mdc-theme-on-secondary)',\r\n                      borderColor: 'var(--mdc-theme-on-primary, #ffffff)',\r\n                    }}\r\n                    icon={<MaterialIcon icon=\"description\"/>}>\r\n    Documentação\r\n  </Button>\r\n\r\n  const style = {\r\n    color: 'var(--mdc-theme-on-primary, #ffffff)',\r\n    borderColor: 'var(--mdc-theme-on-primary, #ffffff)',\r\n    margin: 'auto 8px'\r\n  };\r\n  const button = !!user ? <Button outlined style={style} \r\n                                  onClick={() => firebase.auth().signOut()}>Desconectar</Button> :\r\n                          <Button outlined style={style} \r\n                                  onClick={() => open_sign_in(!sign_in)}\r\n                                  trailingIcon={<MaterialIcon icon={sign_in ? \"arrow_drop_up\" : \"arrow_drop_down\"}/>}>\r\n                            {sign_in ? 'Cancelar' : 'Conectar'}\r\n                          </Button>\r\n\r\n  const sigInChat = useMemo(() => <SignInChat user={user} />, [user]) ;\r\n\r\n  return (\r\n    <TopAppBar style={{position: 'static'}}>\r\n      <TopAppBarRow>\r\n        {button}\r\n        {docLink}\r\n      </TopAppBarRow>\r\n      {sign_in ? sigInChat : null}\r\n    </TopAppBar>\r\n  );\r\n}","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport showdown from 'showdown';\r\nimport Switch from '@material/react-switch';\r\nimport Button from '@material/react-button';\r\n\r\nexport default function Doc(props) {\r\n  const {inventionListener, inventionSave, showHeader} = props;\r\n  const [view, setView] = useState(true)\r\n  const [markdown, setMarkdown] = useState(``);\r\n\r\n  useEffect(() => inventionListener(setMarkdown), [inventionListener,setMarkdown])\r\n\r\n  const header = !showHeader ? null : (\r\n    <div style={{display: 'flex', padding: '8px', }}>\r\n      <label htmlFor='my-switch' style={{marginRight: '12px'}}>Visualizar</label>\r\n      <Switch checked={view} nativeControlId='my-switch' data-testid='switch'\r\n        onChange={(e) => setView(e.target.checked)} />\r\n      <Button raised style={{marginLeft: 'auto'}}\r\n        onClick={() => inventionSave(markdown)} >\r\n        Salvar\r\n      </Button>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <>\r\n      {header}\r\n      <div style={{flexGrow: 1, overflow: 'auto', padding: '8px',}}>\r\n        {view ? <View {...{markdown}} /> : <Markdown {...{markdown, setMarkdown}} />}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Markdown(props) {\r\n  const {markdown, setMarkdown} = props;\r\n  return (\r\n    <div contentEditable suppressContentEditableWarning \r\n      onBlur={(evt) => setMarkdown(evt.target.innerText)}\r\n      style={{\r\n        whiteSpace:'pre-wrap', \r\n        WebkitUserModify: 'read-write', \r\n        overflowWrap: 'break-word', \r\n        lineBreak: 'after-white-space',\r\n        lineHeight: '1em',\r\n        fontFamily: 'monospace',\r\n        display: 'inline-block',\r\n      }}>\r\n      {markdown}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction View(props) {\r\n  const {markdown} = props;\r\n  const converter = new showdown.Converter({strikethrough: true});\r\n  converter.setFlavor('github');\r\n  const html = converter.makeHtml(markdown);\r\n  return <div className='income-doc' dangerouslySetInnerHTML={{__html: html}} />;\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from '@material/react-button';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Fab } from '@material/react-fab';\r\nimport Card, {\r\n  CardPrimaryContent,\r\n  /*CardMedia,\r\n  CardActions,\r\n  CardActionButtons,\r\n  CardActionIcons, */\r\n} from \"@material/react-card\";\r\nimport TextField, {/*HelperText, */Input} from '@material/react-text-field';\r\n\r\n/**\r\n * @example Modelo de Dados Mensagens\r\n * //Ponteiro para identificar usuários\r\n * //Arranjos para manter flexibilidade, mas sem utilidade atual\r\n *  'auto_id': {\r\n *    texto: \"minha mensagem\",\r\n *    timestamp: timestamp,\r\n *    autor: 'GleiderID',\r\n *  }\r\n * \r\n * @example Modelo de Dados de Usuários \r\n * 'uid': {\r\n *    papel: 'administrador'\r\n * }\r\n */\r\n \r\n export default function Chat(props) {\r\n  const {sendMsg, msgsListener} = props || {};\r\n  const {autor} = props || {};\r\n\r\n  const [texto, escrever] = useState('');\r\n\r\n  const send = () => {\r\n    sendMsg(texto, autor)\r\n      .then(() => escrever('')) //Limpa o campo\r\n      .catch(console.error); \r\n  }\r\n  \r\n  const keyDownHandle = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      evt.persist();\r\n      send();\r\n    }\r\n  };\r\n  \r\n  //Atualiza lista de mensagens\r\n  const [msgList, setMsgs] = useState([]);\r\n  useEffect(() => {\r\n    return msgsListener(setMsgs);\r\n  }, [msgsListener, setMsgs]);\r\n  \r\n  return (\r\n    <>\r\n      <MessageList {...{msgList}} />\r\n      <div style={{display: 'flex'}}>\r\n        <TextField label='Sua mensagem' outlined style={{ flex: 1, height: '40px', margin: '8px'}} >\r\n          <Input style={{height: '40px'}}\r\n                \r\n                onKeyDown={keyDownHandle}\r\n                value={texto} onChange={(e) => escrever(e.currentTarget.value)} />\r\n        </TextField>\r\n        <Fab mini icon={<MaterialIcon icon=\"send\"/> }\r\n             onClick={send}\r\n             style={{\r\n               margin: 'auto',\r\n               marginRight: '8px',\r\n               color: 'var(--mdc-theme-on-primary, #fff)',\r\n               background: 'var(--mdc-theme-primary, #6200ee)'\r\n             }} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MessageList({msgList}) {\r\n  const fim = useRef(null);\r\n  const lista = useRef(null);\r\n  const [a, as] = useState(true);\r\n\r\n  const divMsgs = msgList.map(msg => \r\n    <Mensagem key={msg.id} msg={msg} />\r\n  );\r\n\r\n  //Rolagem das mensagens do chat em função da posição do scroll\r\n  useEffect(() => {\r\n    if (fim.current.previousSibling) {\r\n      const { bottom: bottomList } = lista.current.getBoundingClientRect();\r\n      const { top: topFim } = fim.current.previousSibling.getBoundingClientRect();\r\n      \r\n      console.log(fim.current);\r\n      console.log({bottomList, topFim, a});\r\n      if(a) {\r\n        as(false);\r\n        fim.current.scrollIntoView();\r\n      } else if (topFim - bottomList < 100) {\r\n        fim.current.scrollIntoView({behavior: \"smooth\"});\r\n      }\r\n    }\r\n  }, [msgList, a]);\r\n\r\n  return (\r\n    <div className={'teste'}\r\n         style={{flexGrow: 1, overflow: 'auto', position: 'relative'}}\r\n         ref={lista} >\r\n      {divMsgs}\r\n      <div ref={fim}></div>\r\n      {/*<Fab mini icon={<MaterialIcon icon=\"expand_more\"/> }\r\n          onClick={() => fim.current.scrollIntoView({behavior: \"smooth\"})}\r\n             style={{\r\n               position: 'absolute',\r\n               bottom: '4px',\r\n               right: '4px',\r\n               background: 'darkgray',\r\n               mixBlendMode: 'multiply',\r\n             }} />*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Mensagem({msg}) {\r\n  return (\r\n    <Card outlined={false} style={{margin: '8px'}} data-testid=\"mensagem\">\r\n      <CardPrimaryContent style={{padding: '0px 4px'}}>\r\n        <div data-testid=\"autor\" style={{fontWeight: 'bold'}} >{msg.autor}</div>\r\n        <div data-testid=\"texto\">{msg.texto}</div>\r\n      </CardPrimaryContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from \"firebase\";\r\nimport firebase_init from \"./firebase-local\";\r\nimport {setVH} from './height';\r\nimport {ChatHeader} from './Header';\r\n\r\nimport './index.css';\r\nimport './shadow.css';\r\nimport './color.css';\r\nimport './height.css';\r\nimport './docs.css';\r\n\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport '@material/react-card/dist/card.css';\r\nimport '@material/react-list/dist/list.css';\r\nimport '@material/react-typography/dist/typography.css';\r\nimport \"@material/react-switch/dist/switch.css\";\r\nimport '@material/react-button/dist/button.css';\r\nimport '@material/react-text-field/dist/text-field.css';\r\nimport '@material/react-fab/dist/fab.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport '@material/react-top-app-bar/dist/top-app-bar.css';\r\nimport '@material/react-drawer/dist/drawer.css';\r\n\r\nimport {Cell, Grid, Row} from '@material/react-layout-grid';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Fab } from '@material/react-fab';\r\nimport {Body1} from '@material/react-typography';\r\n\r\n//import { SignInChat } from './SignInScreen';\r\nimport Doc from './Doc';\r\nimport Chat from './Chat';\r\n//import App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\ntry {\r\n  firebase.app();\r\n} catch(err) {\r\n  firebase_init();\r\n}\r\n\r\nconst db = firebase.firestore();\r\nconst invencoes = db.collection('invencoes');\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\nsetVH();\r\n\r\nfunction Income(props) {\r\n  //Props\r\n  const {sendMsg, msgsListener} = props;\r\n  const {inventionListener, inventionSave} = props;\r\n\r\n  //Estados\r\n  const [user, setUser] = useState(undefined);\r\n  const [contexto, setContexto] = useState('income');\r\n  const [sign_in, open_sign_in] = useState(false);\r\n  //const [connecting, initLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let unsubProfileGetter = undefined;\r\n    return firebase.auth().onAuthStateChanged(user => {\r\n      if (!user) {\r\n        setUser(undefined);\r\n        if(unsubProfileGetter) {\r\n          unsubProfileGetter();\r\n          unsubProfileGetter = undefined;\r\n        }\r\n        console.log('desconectado');\r\n        console.timeEnd('logging');\r\n      } else { //ao fazer login\r\n        console.time('logging');\r\n        \r\n        //Atribui usuário sem definição do papel\r\n        setUser({\r\n          uid: user.uid,\r\n          nome: user.displayName,\r\n        });\r\n        \r\n        const doc = db.collection('usuarios').doc(user.uid);\r\n        unsubProfileGetter = doc.onSnapshot({ includeMetadataChanges: true }, get);\r\n\r\n        async function get(snapshot) {\r\n          if (!snapshot.metadata.fromCache) {\r\n           //Atribui usuário com definições gravadas no banco, se usuário permanecer conectado\r\n            setUser(snapshot.data() ||  await set());\r\n            unsubProfileGetter(); //desescreve snapshot listener quando acabar\r\n            unsubProfileGetter = undefined;\r\n            console.timeEnd('logging');\r\n          }\r\n        }\r\n\r\n        async function set() {\r\n          const newUser = {\r\n            uid: user.uid,\r\n            nome: user.displayName,\r\n            papel: 'comum',\r\n          };\r\n          await doc.set(newUser);\r\n          return newUser;\r\n        }\r\n      }      \r\n    });\r\n  }, []);\r\n\r\n  const callbacks = { \r\n    sendMsg: (...params) => {\r\n      if (user) return sendMsg(...params);\r\n      \r\n      open_sign_in(true);\r\n      return Promise.reject('Usuário não conectado');\r\n    }, \r\n    msgsListener, \r\n  };\r\n\r\n  const [displayDocs, setDocsDisplay] = useState('flex');\r\n  const [displayChat, setChatDisplay] = useState( window.innerWidth <= 840 ? 'none' : 'flex');\r\n  return (\r\n    <Body1 tag={'div'}>\r\n      <Grid style={{padding: 0}}>\r\n        <Row style={{gridGap: '0px'}}>\r\n          <Cell id='incomedocs' className='vh100' phoneColumns={12} tabletColumns={12} desktopColumns={8} \r\n                style={{display: displayDocs, flexDirection: 'column', position: 'relative'}}>\r\n            <Doc showHeader={!!user && user.papel === 'administrador'}\r\n                  inventionSave={(markdown) => inventionSave(markdown, contexto, user)}\r\n                  inventionListener={(setMarkdown) => inventionListener(contexto, setMarkdown)} />\r\n            \r\n            <Fab id='fab-chat' icon={<MaterialIcon icon=\"chat\"/>}\r\n                  onClick={() => setChatDisplay('flex')}\r\n                   style={{\r\n                     margin: '16px', position: 'absolute', bottom: '0px', right: '0px',\r\n                     zIndex: 0,\r\n                     color: 'var(--mdc-theme-on-primary, #fff)',\r\n                     background: 'var(--mdc-theme-primary, #6200ee)'\r\n                   }} />\r\n          </Cell>\r\n          <Cell id='incomechat' className='vh100' phoneColumns={12} tabletColumns={12} desktopColumns={4} \r\n                style={{display: displayChat, flexDirection: 'column', background: 'white', width: '100%'}}>\r\n            <ChatHeader user={user} sign_in={sign_in} open_sign_in={open_sign_in} hideChat={() => setChatDisplay('none')}/>\r\n            <Chat autor={user} alertas={[]} {...callbacks} />\r\n          </Cell>\r\n        </Row>\r\n      </Grid>\r\n    </Body1>);\r\n}\r\n\r\nasync function sendMsg(texto, autor) {\r\n  if (!autor) {\r\n     return Promise.reject('Conecte-se para enviar mensagens');\r\n  }\r\n\r\n  texto = texto.trim();\r\n\r\n  if (texto.length > 0) {\r\n    return invencoes.doc('income')\r\n          .collection('msgs')\r\n          .add({texto, timestamp, autor});\r\n  } else {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nfunction msgsListener(setMsgs) {\r\n  //db.collection('conversas').doc(contexto).delete().then(() => console.log('excluído'));\r\n  const msgsRef = invencoes.doc('income').collection('msgs');\r\n  const msgsQuery = msgsRef.orderBy('timestamp');\r\n\r\n  return msgsQuery.onSnapshot( docs => {\r\n    //console.log('msgsListener');\r\n    const data = [];\r\n    docs.forEach(doc => {\r\n      data.push({\r\n        ...doc.data(), \r\n        id: doc.id,\r\n        autor: doc.data().autor.nome,\r\n      });\r\n    });\r\n    //console.table(data);\r\n    setMsgs(data);\r\n  },\r\n  error => console.log(error));\r\n}\r\n\r\nfunction inventionListener(invenção, setMarkdown) {\r\n  return invencoes.doc(invenção).onSnapshot( doc => {\r\n    if(doc.data()) setMarkdown(doc.data().markdown);\r\n  }, error => console.log(error));\r\n}\r\n\r\nfunction inventionSave(markdown, invenção, autor) {\r\n  invencoes.doc(invenção).collection('historico').add({\r\n    markdown, timestamp\r\n  });\r\n  console.log('salvando...');\r\n  return invencoes.doc(invenção).set({markdown})\r\n    .then((a) => console.log('salvo', a))\r\n    .catch(error => Promise.reject(<div>error</div>));\r\n}\r\n\r\nReactDOM.render(<Income sendMsg={sendMsg} msgsListener={msgsListener}\r\n                        inventionListener={inventionListener}\r\n                        inventionSave={inventionSave}\r\n               />, document.querySelector(\"#root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}